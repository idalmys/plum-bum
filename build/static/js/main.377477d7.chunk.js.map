{"version":3,"sources":["contexts/auth0-context.js","utils/apiUser.js","components/PencilButton/PencilButton.js","pages/Home.js","components/WritingGoal/WritingGoal.js","utils/apiEntry.js","components/WordCount/SaveButton.js","components/WordCount/DisplaySessionCount.js","components/WordCount/WordCount.js","components/WritingGoal/GoalReached.js","components/WritingStreak/WritingStreak.js","components/DailyWordCount/DailyWordcount.js","components/WeeklyWordCount/weeklyWordCount.js","components/HighestWordCount/highestWordCount.js","components/DashboardUI.js","pages/Dashboard.js","components/PopulateEntries/CreateNewEntry.js","components/PopulateEntries/PopulateEntries.js","pages/Projects.js","components/User.js","pages/Profile.js","components/Navigation.js","Theme.js","App.js","serviceWorker.js","index.js"],"names":["Auth0Context","createContext","useAuth0","useContext","Auth0Provider","state","auth0Client","isLoading","isAuthenticated","user","config","domain","process","client_id","redirect_uri","window","location","origin","initializeAuth0","a","createAuth0Client","setState","search","includes","handleRedirectCallback","getUser","localStorage","setItem","sub","split","history","replaceState","document","title","pathname","this","children","props","configObject","loginWithRedirect","getTokenSilently","getIdTokenClaims","logout","clear","Provider","value","Component","id","axios","get","userData","post","put","PencilButton","name","email","picture","className","Image","src","alt","onClick","href","apiUser","auth0_id","image","then","res","console","log","catch","err","Home","Jumbotron","fluid","style","fontSize","fontWeight","WritingGoal","onChange","goalSetDate","handleSave","userGoal","goal","wordGoal","goalDate","startGoalDate","dateSetGoal","getItem","User","reload","Date","now","todaysDate","show","handleChange","bind","event","target","entryData","useStyles","makeStyles","theme","root","margin","spacing","extendedIcon","marginRight","fab","top","right","bottom","left","position","outline","SaveButton","classes","Fab","variant","color","wordCount","WordCount","countWords","text","filter","word","length","preventDefault","newEntry","entryBody","apiEntry","message","alert","Form","Row","Col","sm","InputGroup","Prepend","Text","fontFamily","backgroundColor","FormControl","placeholder","type","as","aria-label","GoalReached","getArraySum","total","i","ResetGoalData","GetGoalInfo","UserGoal","data","entries","entriesbydate","push","totalWords","goalUpdateModal","parse","Button","WritingStreak","streakLength","DailyWordcount","dailyWordCount","WeeklyWordcount","weeklyCount","weeklycount","highestWordCount","entriesCount","highestentries","MaxCountWord","Math","max","width","maxWidth","marginBottom","palette","secondary","avatar","InsetDividers","List","ListItem","ListItemAvatar","Avatar","ListItemText","primary","days","Divider","component","flexGrow","paper","padding","textAlign","Dashboard","React","useState","modalShow","setModalShow","userInfo","marginTop","Container","Grid","container","item","xs","height","roundedCircle","onHide","zIndex","CreateNewEntry","PopulateEntries","countEntryWords","entry","loadEntries","map","entryWords","entryReturn","buttonDiv","buttonEdit","buttonView","accordionStyle","key","_id","Accordion","AccordionSummary","expandIcon","aria-controls","Typography","AccordionDetails","date","substring","indexOf","headerDiv","headerText","userHeader","dbUser","prevProps","prevState","$set","Modal","Header","closeButton","Body","Group","controlId","Label","Control","Footer","updateUserInfo","Profile","setUser","userID","useEffect","loadUserInfo","menuItem","main","avatarButton","Navigation","anchorEl","setAnchorEl","handleClose","Navbar","bg","expand","Brand","Toggle","Collapse","Nav","Link","p","aria-haspopup","currentTarget","Menu","keepMounted","open","Boolean","onClose","MenuItem","to","returnTo","createMuiTheme","common","plumTeal","plumPlum","typography","App","ThemeProvider","path","exact","Projects","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.377477d7.chunk.js","sourcesContent":["import React, { Component, createContext, useContext } from \"react\";\nimport createAuth0Client from \"@auth0/auth0-spa-js\";\n\n//create the context\nexport const Auth0Context = createContext();\n\n//export the context as useAuth0\nexport const useAuth0 = () => useContext(Auth0Context);\n\n//create a provider\nexport class Auth0Provider extends Component {\n  state = {\n    auth0Client: null, //Create a client property on the state from auth0-spa-sdk\n    isLoading: true,\n    isAuthenticated: false,\n    user: null,\n  };\n\n  //Create a config property to store our credentials for Auth0 (Domain and ClientID)\n  config = {\n    domain: process.env.REACT_APP_AUTH0_DOMAIN,\n    client_id: process.env.REACT_APP_AUTH0_CLIENT_ID,\n    redirect_uri: window.location.origin,\n  };\n\n  componentDidMount() {\n    this.initializeAuth0();\n  }\n\n  //Create an initializeAuth0 mathod where we initialize the auth0 library and create auth0Client\n  initializeAuth0 = async () => {\n    //Make the call to Auth0 SPA SDK's createAuthClient()\n    const auth0Client = await createAuth0Client(this.config);\n    this.setState({ auth0Client });\n\n    if (window.location.search.includes(\"code=\")) {\n      return this.handleRedirectCallback();\n    }\n\n    const isAuthenticated = await auth0Client.isAuthenticated();\n    const user = isAuthenticated ? await auth0Client.getUser() : null;\n\n    this.setState({ isLoading: false, isAuthenticated, user });\n  };\n\n  handleRedirectCallback = async () => {\n    this.setState({ isLoading: true });\n\n    await this.state.auth0Client.handleRedirectCallback();\n    const user = await this.state.auth0Client.getUser();\n    localStorage.setItem(\"id\", user.sub.split(\"|\")[1]);\n    //Need to put in callback function\n    this.setState({ user, isAuthenticated: true, isLoading: false });\n\n    window.history.replaceState({}, document.title, window.location.pathname);\n  };\n\n  render() {\n    const { auth0Client, isLoading, isAuthenticated, user } = this.state;\n    const { children } = this.props;\n\n    const configObject = {\n      isLoading,\n      isAuthenticated,\n      user,\n      //Login method with Auth0's Universal Login\n      loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\n      //Grab a token so we can use for API calls\n      getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\n      //Get the information out of our token\n      getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\n      //Call the logout and get redirected to the Auth0 logout\n      logout: (...p) => {\n        auth0Client.logout(...p);\n        localStorage.clear();\n      },\n    };\n\n    return (\n      <Auth0Context.Provider value={configObject}>\n        {children}\n      </Auth0Context.Provider>\n    );\n  }\n}\n","import axios from \"axios\";\n\nexport default {\n  // Finds a specific user with a given id\n  findUser: function (id) {\n    return axios.get(\"/api/user/\" + id);\n  },\n  // Saves a user to the database\n  createUser: function (userData) {\n    return axios.post(\"/api/user/\", userData);\n  },\n  // Updates a user with a given id\n  updateUser: function (id, userData) {\n    return axios.put(\"/api/user/\" + id, userData);\n  },\n\n  // saveUserGoal: function (goalData) {\n  //   return axios.post(\"/api/user/goal\", goalData)\n  // }\n};\n","import React from \"react\";\nimport \"./PencilButton.css\";\nimport Image from \"react-bootstrap/Image\";\nimport { useAuth0 } from \"../../contexts/auth0-context\";\nimport apiUser from \"../../utils/apiUser\";\n\nfunction PencilButton(props) {\n  const { isLoading, user, loginWithRedirect } = useAuth0();\n\n  const saveUser = (name, email, id, picture) => {\n    const info = {\n      name: name,\n      email: email,\n      auth0_id: id,\n      image: picture,\n    };\n\n    apiUser\n      .createUser(info)\n      .then((res) => {\n        console.log(\"User created\");\n      })\n      .catch((err) => {\n        throw err;\n      });\n  };\n\n  return (\n    <div className=\"PencilButton-div\">\n      {/* if there is no user. show the login button */}\n      {!isLoading && !user && (\n        <>\n          <Image\n            className=\"Pencil-button\"\n            src={props.src}\n            alt={props.alt}\n            onClick={(...p) => {\n              loginWithRedirect(...p);\n            }}\n          />\n        </>\n      )}\n      {!isLoading && user && (\n        <>\n          <a href=\"/dashboard\">\n            <Image\n              className=\"Pencil-button\"\n              src={props.src}\n              alt={props.alt}\n              onClick={saveUser(\n                user.name,\n                user.email,\n                user.sub.split(\"|\")[1],\n                user.picture\n              )}\n            />\n          </a>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default PencilButton;\n","import React from \"react\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport PencilButton from \"../components/PencilButton/PencilButton.js\";\nimport \"./Home.css\";\n\nfunction Home() {\n  return (\n    <div>\n      <Jumbotron fluid className=\"Home-tron\">\n        <img\n          className=\"Home-welcome-img\"\n          src=\"/assets/images/plumbum-blue.png\"\n          alt=\"plumbum logo\"\n        />\n        <div className=\"Home-definition\">\n          <p style={{ fontSize: \"14px\" }}>\n            <em>\n              plumbum: noun; new latin. <strong>pencil.</strong>\n            </em>\n            <br></br>\n          </p>\n        </div>\n        <div className=\"Home-header\">\n          <h2>Welcome.</h2>\n          <p style={{ fontWeight: \"bold\" }}>Now start writing.</p>\n        </div>\n        <div className=\"Writing-button\">\n          <PencilButton src=\"/assets/images/pencil.png\" alt=\"pencil button\" />\n        </div>\n      </Jumbotron>\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport \"./WritingGoal.css\";\nimport { Modal, Row, Col, Form } from \"react-bootstrap\";\nimport Button from \"@material-ui/core/Button\";\nimport apiUser from \"../../utils/apiUser\";\nimport StarsIcon from \"@material-ui/icons/Stars\";\n\n// import DatePicker from 'react-datepicker';\n// import 'react-datepicker/dist/react-datepicker.css';\n\nexport class WritingGoal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      wordGoal: 0,\n      goalSetDate: Date.now(),\n      dateSetGoal: Date.now(),\n      todaysDate: Date.now(),\n      show: false,\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  onChange = (goalSetDate) => {\n    this.setState({ goalSetDate: goalSetDate });\n    console.log(goalSetDate);\n  };\n\n  handleChange(event) {\n    const value = event.target.value;\n    this.setState({ [event.target.id]: value });\n    console.log(\"goal\", value);\n  }\n  handleSave = () => {\n    const userGoal = {\n      goal: this.state.wordGoal,\n      goalDate: this.state.goalSetDate,\n      startGoalDate: this.state.dateSetGoal,\n    };\n    apiUser.updateUser(localStorage.getItem(\"id\"), userGoal).then((User) => {\n      console.log(User);\n    });\n    window.location.reload();\n  };\n  render() {\n    const setGoalBtn = {\n      color: \"white\",\n      backgroundColor: \"#88498f\",\n      margin: \"10px\",\n    };\n\n    return (\n      //You must validate form because the user can not select a day before today\n      //Example: if today is july 4 the user can not select july 3\n\n      <>\n        <Button\n          style={setGoalBtn}\n          variant=\"contained\"\n          onClick={() => this.setState({ show: true })}\n        >\n          <StarsIcon />\n          &nbsp; Set A Writing Goal\n        </Button>\n        <Modal\n          show={this.state.show}\n          onHide={() => {\n            this.setState({ show: false });\n          }}\n          size=\"lg\"\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          centered\n        >\n          <div className=\"modal-container\">\n            <Form onSubmit={this.handleSubmit}>\n              <Modal.Header closeButton>\n                <Modal.Title\n                  style={{ fontFamily: \"Ribeye Marrow\", fontSize: \"3rem\" }}\n                  id=\"contained-modal-title-vcenter\"\n                >\n                  Writing Goal\n                </Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                <div className=\"\">\n                  <div className=\"modalImage\">\n                    <Row>\n                      <Col sm={6}>\n                        <Form.Group controlId=\"wordGoal\">\n                          <Form.Label\n                            style={{\n                              fontFamily: \"Montserrat Alternates\",\n                              fontWeight: \"bold\",\n                            }}\n                          >\n                            MY GOAL WORD COUNT:\n                          </Form.Label>\n                          <Form.Control\n                            type=\"number\"\n                            name=\"words\"\n                            placeholder={this.state.wordGoal}\n                            value={this.state.wordGoal}\n                            onChange={this.handleChange}\n                          />\n                        </Form.Group>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col sm={6}>\n                        <Form.Group controlId=\"dateSetGoal\">\n                          <Form.Label\n                            style={{\n                              fontFamily: \"Montserrat Alternates\",\n                              fontWeight: \"bold\",\n                            }}\n                          >\n                            Start Date of My Goal:\n                          </Form.Label>\n                          <Form.Control\n                            type=\"Date\"\n                            name=\"date\"\n                            placeholder={this.state.dateSetGoal}\n                            value={this.state.dateSetGoal}\n                            onChange={this.handleChange}\n                          />\n                        </Form.Group>\n                      </Col>\n                    </Row>\n                    <Row>\n                      <Col sm={6}>\n                        <Form.Group controlId=\"goalSetDate\">\n                          <Form.Label\n                            style={{\n                              fontFamily: \"Montserrat Alternates\",\n                              fontWeight: \"bold\",\n                            }}\n                          >\n                            Reach My Goal By This Date:\n                          </Form.Label>\n                          <Form.Control\n                            type=\"Date\"\n                            name=\"date\"\n                            placeholder={this.state.goalSetDate}\n                            value={this.state.goalSetDate}\n                            onChange={this.handleChange}\n                          />\n                        </Form.Group>\n                      </Col>\n                    </Row>\n                    {/* <Row>\n                  <DatePicker\n                  dateFormat=\"yyyy-MM-dd\"\n                  selected={this.state.goalSetDate}\n                  onChange={this.onChange}\n                  minDate= {Date.now()}\n                  /> \n                  </Row> */}\n                  </div>\n                </div>\n              </Modal.Body>\n              <Modal.Footer>\n                {/* roy is working to save the data to the database */}\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => {\n                    this.handleSave();\n                    this.setState({ show: false });\n                  }}\n                >\n                  SAVE\n                </Button>\n              </Modal.Footer>\n            </Form>\n          </div>\n        </Modal>\n      </>\n    );\n  }\n}\n","import axios from \"axios\";\n\nexport default {\n  // Gets all entries\n  findAllEntries: function () {\n    return axios.get(\"/api/entry/\");\n  },\n\n  //Get entries by user\n  findEntries: function (id) {\n    return axios.get(\"/api/entry/\" + id);\n  },\n\n  //Get entries by entry_id\n  findbyEntry_id: function (id) {\n    return axios.get(\"/api/entry/id/\" + id);\n  },\n  \n  //Get entries by date\n  findEntriesbydate: function (id) {\n    return axios.get(\"/api/date/\" + id);\n  },\n\n  //Find by week\n  findEntriesbyweek: function (id) {\n    return axios.get(\"/api/week/\"+ id);\n  },\n\n  //Streak Lenght\n  getStreak: function(id) {\n    return axios.get(\"/api/streak/\"+ id);\n  },\n\n  //Get entries betwen two date(startGoalDate and GoalDate)\n  getgoaldata: function(id ) {\n    return axios.get(\"/api/goal/\"+ id);\n  },\n\n  // Saves a entry to the database\n  createEntry: function ( id , entryData) {\n    return axios.post(\"/api/entry/\" + id, entryData);\n  },\n\n  // Updates an entry\n  updateEntry: function (id ,entryData) {\n    return axios.put(\"/api/entry/\" + id, entryData);\n  },\n\n  // Deletes the entry with the given id\n  deleteEntry: function (id) {\n    return axios.delete(\"/api/entry/\" + id);\n  },\n};\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Fab from \"@material-ui/core/Fab\";\nimport SaveIcon from \"@material-ui/icons/Save\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n  fab: {\n    margin: 0,\n    top: \"auto\",\n    right: 30,\n    bottom: 50,\n    left: \"auto\",\n    position: \"fixed\",\n    \"&:focus\": {\n      outline: \"none\",\n    },\n  },\n}));\n\nexport default function SaveButton(props) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Fab className={classes.fab} variant=\"extended\" color=\"secondary\">\n        <SaveIcon className={classes.extendedIcon} />\n        Save\n      </Fab>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Fab from \"@material-ui/core/Fab\";\nimport CreateIcon from \"@material-ui/icons/Create\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n  fab: {\n    margin: 0,\n    top: \"auto\",\n    right: \"auto\",\n    bottom: 50,\n    left: 30,\n    position: \"fixed\",\n    \"&:focus\": {\n      outline: \"none\",\n    },\n  },\n}));\n\nexport default function SaveButton(props) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Fab\n        wordCount={props.wordCount}\n        className={classes.fab}\n        variant=\"extended\"\n        color=\"secondary\"\n      >\n        <CreateIcon className={classes.extendedIcon} />\n        Current Word Count: &nbsp; {props.wordCount}\n      </Fab>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport { Col, Row, FormControl, InputGroup, Form } from \"react-bootstrap\";\nimport apiEntry from \"../../utils/apiEntry\";\nimport SaveButton from \"./SaveButton\";\nimport DisplaySessionCount from \"./DisplaySessionCount\";\n\nexport default class WordCount extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: \"\",\n      entryBody: \"\",\n      wordCount: 0,\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  // Count Words\n  countWords = (text) => {\n    return text.split(/\\s+|--+/).filter((word) => word.length > 0).length;\n  };\n\n  handleChange(event) {\n    const value = event.target.value;\n    this.setState({ [event.target.id]: value });\n    console.log(value);\n  }\n\n  handleSave = (event) => {\n    event.preventDefault();\n\n    console.log(\"Save FAB clicked.\");\n\n    const newEntry = {\n      auth0_id: localStorage.getItem(\"id\"),\n      title: this.state.title,\n      entryBody: this.state.entryBody,\n    };\n\n    if (this.state.entryBody.length > 0 && this.state.title.length > 0) {\n      apiEntry.createEntry(localStorage.getItem(\"id\"), newEntry).then(\n        this.setState({\n          message: alert(\"Your project has been saved!\"),\n          title: \"\",\n          entryBody: \" \",\n        })\n      );\n      window.location.reload();\n    } else {\n      this.setState({\n        message: alert(\n          \"Uh-oh, looks like you need to fill out the form completely before you can submit.\"\n        ),\n      });\n    }\n  };\n  render() {\n    const camo = {\n      backgroundColor: \"#a8e6cf\",\n    };\n\n    return (\n      <div className=\"wordcount\">\n        <Form>\n          <Row className=\"fluid\" id=\"row-2\">\n            <Col className=\"content dash3\" sm={12}>\n              <InputGroup>\n                <br></br>\n                <InputGroup id=\"passage-title\" sm={12}>\n                  <InputGroup.Prepend>\n                    <InputGroup.Text\n                      style={{\n                        color: \"black\",\n                        fontFamily: \"Montserrat Alternates\",\n                        backgroundColor: \"#ffd3b6\",\n                      }}\n                    >\n                      Title | Chapter\n                    </InputGroup.Text>\n                  </InputGroup.Prepend>\n                  <FormControl\n                    id=\"title\"\n                    value={this.state.title}\n                    placeholder=\"Enter the name of your chapter or title of your project\"\n                    name=\"title\"\n                    type=\"text\"\n                    className=\"form-control\"\n                    onChange={this.handleChange}\n                  />\n                  <br></br>\n                </InputGroup>\n                <FormControl\n                  id=\"entryBody\"\n                  value={this.state.entryBody}\n                  name=\"bodyEntry\"\n                  type=\"text\"\n                  placeholder=\"''This is how you do it: you sit down at the keyboard and you put one word after another until it's done. It's that easy, and that hard.''  -  Neil Gaiman \"\n                  className=\"form-control\"\n                  onChange={this.handleChange}\n                  as=\"textarea\"\n                  aria-label=\"With textarea\"\n                />\n              </InputGroup>\n            </Col>\n          </Row>\n          <Row>\n            <Col sm={4}>\n              <DisplaySessionCount\n                wordCount={this.countWords(this.state.entryBody)}\n              />\n            </Col>\n            <Col sm={4}>\n              <div\n                style={camo}\n                id=\"btns\"\n                onClick={this.handleSave}\n                /*disabled={!this.state.formValid}*/\n              >\n                <SaveButton />\n              </div>\n            </Col>\n          </Row>\n        </Form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport apiEntry from \"../../utils/apiEntry\";\nimport apiUser from \"../../utils/apiUser\";\nimport { Modal } from \"react-bootstrap\";\nimport Button from \"@material-ui/core/Button\";\nimport AlarmOnIcon from \"@material-ui/icons/AlarmOn\";\n\nexport default class GoalReached extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      totalWords: 18,\n      goal: 1000,\n      goalDate: \"2020-07-06T00:00:00.000Z\",\n      startGoalDate: \"2020-07-06T00:00:00.000Z\",\n      show: false,\n    };\n  }\n\n  componentDidMount() {\n    this.GetGoalInfo();\n  }\n\n  // Count Words by entries\n  countWords = (text) => {\n    return text.split(/\\s+|--+/).filter((word) => word.length > 0).length;\n  };\n\n  //Allow calculate Total\n  getArraySum = (a) => {\n    var total = 0;\n    for (var i in a) {\n      total += a[i];\n    }\n    return total;\n  };\n\n  //When user reach the goal reset values into the database\n  ResetGoalData = () => {\n    const userGoal = {\n      goal: 0,\n      goalDate: \"\",\n      startGoalDate: \"\",\n    };\n    apiUser.updateUser(localStorage.getItem(\"id\"), userGoal).then((User) => {\n      console.log(User);\n    });\n  };\n\n  //Get entries from the database  between startgoalDate date and goalDate (When user save data from writing goal that function\n  //must calclate total words using that info)\n  //Take a look to console(inspect the app) of that way you can understand the mongodb result\n\n  GetGoalInfo = () => {\n    apiUser\n      .findUser(localStorage.getItem(\"id\"))\n\n      .then((UserGoal) => {\n        this.setState({\n          goal: UserGoal.data.goal,\n          goalDate: UserGoal.data.goalDate,\n          startGoalDate: UserGoal.data.startGoalDate,\n        });\n      });\n\n    apiEntry.getgoaldata(localStorage.getItem(\"id\")).then((entries) => {\n      console.log(entries.data, \"goal\");\n      let entriesbydate = [];\n      if (entries.data.length > 0) {\n        for (var i = 0; i < entries.data.length; i++) {\n          entriesbydate.push(this.countWords(entries.data[i].entryBody));\n          console.log(\"words\", entriesbydate);\n        }\n\n        //Calculate Total words betwen startGoalDate and GoalDate\n        //With that value you can compare the goal\n        this.setState({\n          totalWords: this.getArraySum(entriesbydate),\n        });\n        console.log(\" totalwords \", this.state.totalWords);\n        console.log(\" Goal \", this.state.goal);\n        console.log(\" GoalDate \", this.state.goalDate);\n        console.log(\" StartGoalDate \", this.state.startGoalDate);\n      } else {\n        this.setState({ message: \"No data Found\" });\n      }\n    });\n  };\n\n  handleModal() {\n    this.setState({ show: !this.state.show });\n  }\n\n  goalUpdateModal = () => {\n    let goalDate = Date.parse(this.state.goalDate);\n    if (goalDate === Date.now() && this.state.totalWords >= this.state.goal) {\n      return (\n        // <Modal show={this.state.show} onHide={() => this.handleModal()}>\n        //   <Modal.Header closeButton>{/* GOAL: */}</Modal.Header>\n        //   <Modal.Body>\n        //     Congrats! You have reached your goal! Click Writing Goal To Set a\n        //     New Goal.\n        //   </Modal.Body>\n        // </Modal>\n        alert(\n          \"Congrats! You have reached your goal! You can keep writing or set a new goal.\"\n        )\n      );\n    } else if (\n      goalDate === Date.now() &&\n      this.state.totalWords < this.state.goal\n    ) {\n      // console.log(this.state.totalWords)\n      // console.log(this.state.goal)\n      return (\n        // <Modal show={this.state.show} onHide={() => this.handleModal()}>\n        //   <Modal.Header closeButton>{/* GOAL: */}</Modal.Header>\n        //   <Modal.Body>Reset your Goal!</Modal.Body>\n        // </Modal>\n        alert(\"O You Can Do It!!!  Reset Your Goal\")\n      );\n    } else if (\n      goalDate !== Date.now() &&\n      this.state.totalWords >= this.state.goal\n    ) {\n      console.log(\"reached goal\");\n      console.log(this.state.totalWords);\n      console.log(this.state.goal);\n      return (\n        // <Modal show={this.state.show} onHide={() => this.handleModal()}>\n        //   <Modal.Header closeButton>{/* GOAL: */}</Modal.Header>\n        //   <Modal.Body>\n        //     WOW!!! you have reached your goal before the goal date!\n        //   </Modal.Body>\n        // </Modal>\n        alert(\"WOW!!! you have reached your goal before the goal date!\")\n      );\n    } else {\n      console.log(\"reached here\");\n    }\n  };\n  render() {\n    const checkProgressBtn = {\n      margin: \"10px\",\n    };\n\n    return (\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        style={checkProgressBtn}\n        onClick={this.goalUpdateModal}\n      >\n        <AlarmOnIcon />\n        &nbsp; Check Goal Progress\n      </Button>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport apiEntry from \"../../utils/apiEntry\";\n\nclass WritingStreak extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      streakLength: 0,\n    };\n  }\n\n  componentDidMount() {\n    this.WritingStreak();\n  }\n\n  WritingStreak = () => {\n    apiEntry\n      .getStreak(localStorage.getItem(\"id\"))\n      .then((entries) => {\n        console.log(entries.data, \"streaks\");\n        console.log(entries.data.length, \"streak\");\n        this.setState({\n          streakLength: entries.data.length,\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n  render() {\n    return (\n      <div>\n        <p>{this.state.streakLength}</p>\n      </div>\n    );\n  }\n}\n\nexport default WritingStreak;\n","import React, { Component } from \"react\";\nimport apiEntry from \"../../utils/apiEntry\";\nimport \"../../pages/Dashboard.css\";\n\nexport default class DailyWordcount extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dailyWordCount: 0,\n    };\n  }\n\n  // Count Words\n  countWords = (text) => {\n    return text.split(/\\s+|--+/).filter((word) => word.length > 0).length;\n  };\n\n  componentDidMount() {\n    this.dailyWordCount();\n  }\n\n  //Sum\n  getArraySum = (a) => {\n    var total = 0;\n    for (var i in a) {\n      total += a[i];\n    }\n    return total;\n  };\n\n  // Get daily word count\n  dailyWordCount = () => {\n    apiEntry\n      .findEntriesbydate(localStorage.getItem(\"id\"))\n      .then((entries) => {\n        console.log(entries.data);\n        let entriesbydate = [];\n\n        for (var i = 0; i < entries.data.length; i++) {\n          entriesbydate.push(this.countWords(entries.data[i].entryBody));\n          console.log(\"words\", entriesbydate);\n        }\n\n        this.setState({\n          dailyWordCount: this.getArraySum(entriesbydate),\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  render() {\n    return <div>{this.state.dailyWordCount}</div>;\n  }\n}\n","import React, { Component } from \"react\";\nimport apiEntry from \"../../utils/apiEntry\";\nimport \"../../pages/Dashboard.css\";\n\nexport default class WeeklyWordcount extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      auth0_id: \"\",\n      weeklycount: 0,\n    };\n  }\n  // Count Words\n  countWords = (text) => {\n    return text.split(/\\s+|--+/).filter((word) => word.length > 0).length;\n  };\n\n  componentDidMount() {\n    this.weeklyCount();\n  }\n\n  //Sum\n  getArraySum = (a) => {\n    var total = 0;\n    for (var i in a) {\n      total += a[i];\n    }\n    return total;\n  };\n  // word count last 7 days\n  weeklyCount = () => {\n    apiEntry\n      .findEntriesbyweek(localStorage.getItem(\"id\"))\n      .then((entries) => {\n        console.log(entries.data);\n        let entriesbydate = [];\n\n        console.log(entries.data.length, \"length\");\n        for (var i = 0; i < entries.data.length; i++) {\n          entriesbydate.push(this.countWords(entries.data[i].entryBody));\n\n          console.log(\"weeks\", entriesbydate);\n        }\n\n        this.setState({\n          weeklycount: this.getArraySum(entriesbydate),\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  render() {\n    return <>{this.state.weeklycount}</>;\n  }\n}\n","import React, { Component } from \"react\";\nimport apiEntry from \"../../utils/apiEntry\";\nimport \"../../pages/Dashboard.css\";\n\nexport default class highestWordCount extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      MaxCountWord: 0,\n    };\n  }\n  // Count Words\n  countWords = (text) => {\n    return text.split(/\\s+|--+/).filter((word) => word.length > 0).length;\n  };\n\n  componentDidMount() {\n    this.entriesCount();\n  }\n\n  //Sum\n  getArraySum = (a) => {\n    var total = 0;\n    for (var i in a) {\n      total += a[i];\n    }\n    return total;\n  };\n\n  // Get daily word count\n  entriesCount = () => {\n    apiEntry\n      .findEntries(localStorage.getItem(\"id\"))\n      .then((entries) => {\n        console.log(\"Id is \" + localStorage.getItem(\"id\"));\n        console.log(entries.data);\n        let highestentries = [];\n\n        console.log(entries.data.length, \"length\");\n        for (var i = 0; i < entries.data.length; i++) {\n          highestentries.push(this.countWords(entries.data[i].entryBody));\n\n          console.log(\"Highestwords\", highestentries);\n        }\n\n        if (highestentries.length > 0) {\n          this.setState({\n            MaxCountWord: Math.max(...highestentries),\n          });\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  render() {\n    return <>{this.state.MaxCountWord}</>;\n  }\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport TodayIcon from \"@material-ui/icons/Today\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport EventAvailableIcon from \"@material-ui/icons/EventAvailable\";\nimport TrendingUpIcon from \"@material-ui/icons/TrendingUp\";\nimport Divider from \"@material-ui/core/Divider\";\nimport WritingStreak from \"../components/WritingStreak/WritingStreak.js\";\nimport DailyWordcount from \"../components/DailyWordCount/DailyWordcount.js\";\nimport WeeklyWordCount from \"../components/WeeklyWordCount/weeklyWordCount.js\";\nimport HighestWordCount from \"../components/HighestWordCount/highestWordCount.js\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    maxWidth: 360,\n    marginBottom: \"40px\",\n    backgroundColor: theme.palette.secondary,\n  },\n  avatar: {\n    color: \"#ffd3b6\",\n    backgroundColor: \"#88498f\",\n  },\n}));\n\nexport default function InsetDividers() {\n  const classes = useStyles();\n\n  return (\n    <List className={classes.root}>\n      <ListItem>\n        <ListItemAvatar>\n          <Avatar className={classes.avatar}>\n            <TrendingUpIcon />\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText\n          primary=\"Writing Streak\"\n          secondary={<WritingStreak />}\n          days\n        />\n      </ListItem>\n      <Divider variant=\"inset\" component=\"li\" />\n      <ListItem>\n        <ListItemAvatar>\n          <Avatar className={classes.avatar}>\n            <TodayIcon />\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText\n          primary=\"Today's Word Count\"\n          secondary={<DailyWordcount />}\n        />\n      </ListItem>\n      <Divider variant=\"inset\" component=\"li\" />\n      <ListItem>\n        <ListItemAvatar>\n          <Avatar className={classes.avatar}>\n            <DateRangeIcon />\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText\n          primary=\"This Week's Word Count\"\n          secondary={<WeeklyWordCount />}\n        />\n      </ListItem>\n      <Divider variant=\"inset\" component=\"li\" />\n      <ListItem>\n        <ListItemAvatar>\n          <Avatar className={classes.avatar}>\n            <EventAvailableIcon />\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText\n          primary=\"Best Daily Word Count\"\n          secondary={<HighestWordCount />}\n        />\n      </ListItem>\n    </List>\n  );\n}\n","import React from \"react\";\nimport \"./Dashboard.css\";\nimport { Container, Col, Row, Image } from \"react-bootstrap\";\nimport { useAuth0 } from \"../contexts/auth0-context\";\nimport { WritingGoal } from \"../components/WritingGoal/WritingGoal.js\";\nimport WordCount from \"../components/WordCount/WordCount\";\nimport apiUser from \"../utils/apiUser\";\nimport GoalReached from \"../components/WritingGoal/GoalReached.js\";\nimport DashboardUI from \"../components/DashboardUI\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n}));\n\nfunction Dashboard() {\n  const { isLoading, user } = useAuth0();\n  const [modalShow, setModalShow] = React.useState(false);\n\n  const picture = user ? user.picture : null;\n\n  const userInfo = (id) => {\n    apiUser\n      .findUser(id)\n      .then((res) => {\n        console.log(\"User found!\");\n        console.log(res);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  const id = user ? user.sub.split(\"|\")[1] : null;\n\n  const classes = useStyles();\n\n  // const statsDiv = {\n  //   marginBottom: \"10px\",\n  // };\n\n  const goalDiv = {\n    marginBottom: \"15px\",\n    textAlign: \"center\",\n  };\n\n  const headerStyles = {\n    fontFamily: \"Ribeye Marrow\",\n    marginTop: \"20px\",\n    marginBottom: \"30px\",\n  };\n\n  return (\n    <>\n      <div>\n        {!isLoading && user && (\n          <>\n            {userInfo(user.sub.split(\"|\")[1])}\n            <h1 style={headerStyles}>{user.name}'s Dashboard</h1>\n\n            <Container>\n              <div>\n                <Grid container spacing={3}>\n                  <Grid item xs={12} sm={6}>\n                    <Image\n                      src={picture}\n                      width={320}\n                      height={320}\n                      roundedCircle\n                    />\n                  </Grid>\n                  <Grid item xs={12} sm={6}>\n                    <DashboardUI />\n                  </Grid>\n                </Grid>\n              </div>\n              <div style={goalDiv}>\n                <WritingGoal\n                  show={modalShow}\n                  onHide={() => setModalShow(false)}\n                />\n                <GoalReached\n                  show={modalShow}\n                  onHide={() => setModalShow(false)}\n                />\n              </div>\n              <WordCount />\n            </Container>\n          </>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default Dashboard;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n  fab: {\n    zIndex: 1600,\n    margin: 0,\n    top: \"auto\",\n    right: 30,\n    bottom: 50,\n    left: \"auto\",\n    position: \"fixed\",\n    \"&:focus\": {\n      outline: \"none\",\n    },\n  },\n}));\n\nexport default function CreateNewEntry() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <a href=\"/dashboard\">\n        <Fab className={classes.fab} variant=\"extended\" color=\"secondary\">\n          <AddIcon className={classes.extendedIcon} />\n          Create New Project\n        </Fab>\n      </a>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport apiEntry from \"../../utils/apiEntry\";\nimport CreateNewEntry from \"./CreateNewEntry\";\n\nimport Container from \"@material-ui/core/Container\";\nimport Button from \"@material-ui/core/Button\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport MenuBookIcon from \"@material-ui/icons/MenuBook\";\n\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\n\nclass PopulateEntries extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      entries: [],\n      show: false,\n    };\n  }\n\n  componentDidMount() {\n    this.loadEntries();\n  }\n  countEntryWords = (entry) => {\n    let entryBodyString = entry.entryBody;\n    let arrayCount = [];\n    arrayCount = entryBodyString.split(\" \");\n    let entryWords = arrayCount.length;\n    return entryWords;\n  };\n\n  loadEntries = () => {\n    apiEntry\n      .findEntries(localStorage.getItem(\"id\"))\n      .then((entries) => {\n        entries.data.map((entry) => {\n          const wordCount = this.countEntryWords(entry);\n          entry.entryWords = wordCount;\n        });\n        this.setState({\n          entries: entries.data,\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  render() {\n    const myWork = {\n      textAlign: \"left\",\n    };\n\n    const entryReturn = {\n      backgroundColor: \"#a8e6cf\",\n      padding: \".5%\",\n    };\n\n    const buttonDiv = {\n      marginTop: \"10px\",\n      marginBottom: \"10px\",\n    };\n\n    const buttonEdit = {\n      \"&:focus\": {\n        outline: \"none\",\n      },\n    };\n\n    const buttonView = {\n      color: \"white\",\n      backgroundColor: \"#88498f\",\n      \"&:focus\": {\n        outline: \"none\",\n      },\n    };\n\n    const accordionStyle = {\n      backgroundColor: \"#dcedc1\",\n    };\n\n    return (\n      <Container className=\"PopulateEntries\">\n        <CreateNewEntry />\n        <div style={myWork}>\n          {this.state.entries.map((entry) => {\n            return (\n              <>\n                <div style={entryReturn} key={entry._id}>\n                  {console.log(entry)}\n                  <Accordion>\n                    <AccordionSummary\n                      expandIcon={<ExpandMoreIcon />}\n                      aria-controls=\"panel1a-content\"\n                      id=\"panel1a-header\"\n                      style={accordionStyle}\n                    >\n                      <Typography>\n                        <h4>\n                          <MenuBookIcon fontSize=\"large\" />\n                          &nbsp;\n                          <strong>{entry.title}</strong>\n                        </h4>\n                      </Typography>\n                    </AccordionSummary>\n                    <AccordionDetails>\n                      <Typography>\n                        <div style={buttonDiv}>\n                          <Button\n                            style={buttonEdit}\n                            variant=\"contained\"\n                            color=\"secondary\"\n                          >\n                            <CreateIcon />\n                            &nbsp; Edit\n                          </Button>{\" \"}\n                          &nbsp; &nbsp;\n                          <Button variant=\"contained\" style={buttonView}>\n                            <VisibilityIcon />\n                            &nbsp; View\n                          </Button>\n                        </div>\n\n                        <p>\n                          <strong>Date Created:</strong>{\" \"}\n                          {entry.date.substring(0, entry.date.indexOf(\"T\"))}\n                        </p>\n                        <p>\n                          <strong>Words:</strong> {entry.entryWords}\n                        </p>\n                      </Typography>\n                    </AccordionDetails>\n                  </Accordion>\n                </div>\n              </>\n            );\n          })}\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default PopulateEntries;\n","import React from \"react\";\n\n// Files/Components\nimport { useAuth0 } from \"../contexts/auth0-context\";\nimport PopulateEntries from \"../components/PopulateEntries/PopulateEntries.js\";\n\n// Material UI\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Container from \"@material-ui/core/Container\";\nimport Image from \"react-bootstrap/Image\";\n\n// Material UI variables\nconst useStyles = makeStyles((theme) => ({\n  headerDiv: {\n    textAlign: \"center\",\n  },\n  headerText: {\n    fontFamily: \"Ribeye Marrow\",\n    marginTop: \"20px\",\n    marginBottom: \"10px\",\n  },\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n}));\n\nfunction Dashboard() {\n  const { user } = useAuth0();\n  const picture = user ? user.picture : null;\n  const classes = useStyles();\n  const name = user ? user.name : null;\n\n  return (\n    <>\n      <div className={classes.userHeader}>\n        <Container>\n          <Grid item xs={12}>\n            <div className={classes.headerDiv}>\n              <h1 className={classes.headerText}>\n                {\" \"}\n                &nbsp; &nbsp;\n                {user ? `${user.name}'s` : null} Projects\n              </h1>\n              <Image\n                alt={name}\n                src={picture}\n                width={100}\n                height={100}\n                roundedCircle\n              />\n            </div>\n          </Grid>\n        </Container>\n      </div>\n      <Container>\n        <Grid item xs={12} style={{ marginTop: \"40px\" }}>\n          <PopulateEntries />\n        </Grid>\n      </Container>\n    </>\n  );\n}\n\nexport default Dashboard;\n","import React, { Component } from \"react\";\nimport { Image, Modal, Form } from \"react-bootstrap\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport apiUser from \"../utils/apiUser\";\n\nclass User extends Component {\n  constructor(props) {\n    super(props);\n\n    //Set state to the props passed from the dbUser object prop so that\n    //information can be rendered to the screen\n    this.state = {\n      name: props.dbUser.name,\n      email: props.dbUser.email,\n      picture: props.dbUser.picture,\n      id: props.dbUser.id,\n      show: false,\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  //Auth0 passes null values on mount, once the object is loaded and passed,\n  //the updated props can be rendered to the screen\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps !== this.props) {\n      this.setState({\n        name: this.props.dbUser.name,\n        email: this.props.dbUser.email,\n        picture: this.props.dbUser.picture,\n        id: this.props.dbUser.id,\n      });\n    }\n  }\n\n  //Update state when model is edited\n  handleChange(event) {\n    const value = event.target.value;\n    this.setState({ [event.target.id]: value });\n  }\n\n  //When save button is clicked in model, the values are updated in the record using the ID\n  updateUserInfo() {\n    apiUser\n      .updateUser(this.props.dbUser.id, {\n        $set: {\n          name: this.state.name,\n          email: this.state.email,\n        },\n      })\n      .catch((err) => {\n        throw err;\n      });\n  }\n\n  render() {\n    const personalInfo = {\n      padding: \"20px\",\n      textAlign: \"left\",\n    };\n\n    const pictureDiv = {\n      textAlign: \"right\",\n    };\n\n    const profilePicture = {\n      marginTop: \"10px\",\n      marginRight: \"30px\",\n      marginBottom: \"30px\",\n    };\n\n    const headerStyles = {\n      fontFamily: \"Ribeye Marrow\",\n      marginTop: \"20px\",\n      marginBottom: \"30px\",\n    };\n\n    return (\n      <>\n        {/*User information rendered onto the screen */}\n        <h1 style={headerStyles}>{this.state.name}'s Profile</h1>\n\n        <Grid container spacing={1}>\n          <Grid item xs={12} sm={2}></Grid>\n          <Grid item xs={12} sm={4}>\n            <div style={pictureDiv}>\n              <Image\n                src={this.state.picture}\n                width={200}\n                height={200}\n                style={profilePicture}\n                roundedCircle\n              />\n            </div>\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <div style={personalInfo}>\n              <h4>Name</h4>\n              <p>{this.state.name}</p>\n              <h4>Email</h4>\n              <p>{this.state.email}</p>\n            </div>\n          </Grid>\n          <Grid item xs={12} sm={2}></Grid>\n        </Grid>\n        <div>\n          <Button\n            onClick={() => this.setState({ show: true })}\n            variant=\"contained\"\n            color=\"secondary\"\n          >\n            Update Profile\n          </Button>\n\n          {/* Modal that allows user to update their name and email*/}\n          <Modal\n            show={this.state.show}\n            onHide={() => {\n              this.setState({ show: false });\n            }}\n          >\n            <Modal.Header closeButton>\n              <h1>Update Your Profile.</h1>\n            </Modal.Header>\n\n            <Modal.Body>\n              <Form>\n                <Form.Group controlId=\"name\">\n                  <Form.Label>Full Name</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"name\"\n                    placeholder={this.state.name}\n                    value={this.state.name}\n                    onChange={this.handleChange}\n                  />\n                </Form.Group>\n                <Form.Group controlId=\"email\">\n                  <Form.Label>Email</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    name=\"email\"\n                    placeholder={this.state.email}\n                    value={this.state.email}\n                    onChange={this.handleChange}\n                  />\n                </Form.Group>\n              </Form>\n            </Modal.Body>\n\n            <Modal.Footer>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => {\n                  this.setState({ show: false });\n                  this.updateUserInfo();\n                }}\n              >\n                Save\n              </Button>\n            </Modal.Footer>\n          </Modal>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default User;\n","import React, { useState, useEffect } from \"react\";\nimport { useAuth0 } from \"../contexts/auth0-context\";\nimport User from \"../components/User\";\nimport apiUser from \"../utils/apiUser\";\n\nexport default function Profile() {\n  //Destruct user object from Auth0 context and store appropriate fields in dbUser\n  const { user } = useAuth0();\n  const [dbUser, setUser] = useState({});\n\n  //Grab ID from Auth0 user to make queries to the database\n  const userID = user ? user.sub.split(\"|\")[1] : null;\n\n  //When an ID is found, a query is made to MongoDB to grab the record for that user\n  useEffect(() => {\n    if (userID) {\n      loadUserInfo(userID);\n    }\n    return () => {};\n  }, [user, userID]);\n\n  //API call to grab record\n  const loadUserInfo = (id) => {\n    apiUser\n      .findUser(id)\n      .then((res) => {\n        setUser({\n          name: res.data.name,\n          email: res.data.email,\n          picture: res.data.image,\n          id: res.data.auth0_id,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <>\n      {/*Render User with dbUser object containing user info*/}\n      <User dbUser={dbUser} />\n    </>\n  );\n}\n","import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { Link } from \"react-router-dom\";\nimport { Navbar, Nav } from \"react-bootstrap\";\nimport { useAuth0 } from \"../contexts/auth0-context\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n// Material UI variables\nconst useStyles = makeStyles((theme) => ({\n  menuItem: {\n    fontFamily: \"Montserrat Alternates\",\n    \"&:hover\": {\n      color: theme.palette.secondary.main,\n      backgroundColor: \"#a8e6cf\",\n    },\n  },\n  avatarButton: {\n    \"&:focus\": {\n      outline: \"none\",\n    },\n    \"&:hover\": {\n      backgroundColor: \"transparent\",\n    },\n  },\n}));\n\nfunction Navigation() {\n  const { isLoading, user, loginWithRedirect, logout } = useAuth0();\n  const picture = user ? user.picture : null;\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const classes = useStyles();\n\n  return (\n    <Navbar bg=\"light\" expand=\"lg\">\n      <Navbar.Brand href=\"/\">\n        <img id=\"nav-logo\" src=\"./assets/images/plumbum-main.png\" alt=\"\" />\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto justify-content-end\" style={{ width: \"100%\" }}>\n          {/* if there is no user. show the login button */}\n          {!isLoading && !user && (\n            <>\n              <Nav.Link href=\"/about\">About</Nav.Link>\n              <Nav.Link\n                onClick={(...p) => {\n                  console.log(p);\n                  loginWithRedirect(...p);\n                }}\n              >\n                Login | Sign Up\n              </Nav.Link>\n            </>\n          )}\n          {!isLoading && user && (\n            <>\n              <Navbar.Text style={{ fontFamily: \"Montserrat Alternates\" }}>\n                Hello, {user.name}!\n              </Navbar.Text>\n              &nbsp;\n              <Button\n                aria-controls=\"simple-menu\"\n                aria-haspopup=\"true\"\n                onClick={handleClick}\n                className={classes.avatarButton}\n              >\n                <Avatar\n                  className={classes.avatarButton}\n                  alt=\"profile picture\"\n                  src={picture}\n                />\n              </Button>\n              <Menu\n                id=\"simple-menu\"\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n              >\n                <MenuItem className={classes.menuItem} onClick={handleClose}>\n                  <Avatar alt=\"profile picture\" src={picture} />\n                </MenuItem>\n                <MenuItem\n                  className={classes.menuItem}\n                  component={Link}\n                  to=\"/profile\"\n                  onClick={handleClose}\n                >\n                  Profile\n                </MenuItem>\n                <MenuItem\n                  className={classes.menuItem}\n                  component={Link}\n                  to=\"/dashboard\"\n                  onClick={handleClose}\n                >\n                  Dashboard\n                </MenuItem>\n                <MenuItem\n                  className={classes.menuItem}\n                  component={Link}\n                  to=\"/projects\"\n                  onClick={handleClose}\n                >\n                  My Projects\n                </MenuItem>\n              </Menu>\n              &nbsp;\n              {/* <Nav.Link href=\"/profile\">Profile</Nav.Link>\n              <Nav.Link href=\"/dashboard\">Dashboard</Nav.Link>\n              <Nav.Link href=\"/projects\">My Projects</Nav.Link> */}\n              <Nav.Link\n                onClick={() =>\n                  logout(\n                    { returnTo: window.location.origin },\n                    window.localStorage.clear()\n                  )\n                }\n                className=\"navbar-item\"\n              >\n                {\" \"}\n                Logout{\" \"}\n              </Nav.Link>\n            </>\n          )}\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n\nexport default Navigation;\n","import { createMuiTheme } from \"@material-ui/core/styles\";\n\nconst plumTeal = \"#a8e6cf\";\nconst plumPlum = \"#88498f\";\nconst plumDarkTeal = \"#247ba0\";\nconst plumLightOrange = \"#ffd3b6\";\nconst plumLightPeach = \"#ffaaa5\";\n\nexport default createMuiTheme({\n  palette: {\n    common: {\n      plumTeal: `${plumTeal}`,\n      plumPlum: `${plumPlum}`,\n    },\n    primary: {\n      main: `${plumTeal}`,\n    },\n    secondary: {\n      main: `${plumDarkTeal}`,\n    },\n  },\n  typography: {\n    // tab: {\n    //   fontFamily: \"Raleway\",\n    //   textTransform: \"none\",\n    //   fontWeight: 700,\n    //   fontSize: \"1rem\",\n    // },\n    // estimate: {\n    //   fontFamily: \"Pacifico\",\n    //   fontSize: \"1rem\",\n    //   textTransform: \"none\",\n    //   color: \"white\",\n    // },\n  },\n});\n","import React from \"react\";\nimport Home from \"./pages/Home\";\nimport Dashboard from \"./pages/Dashboard\";\nimport Projects from \"./pages/Projects\";\nimport Profile from \"./pages/Profile\";\n\nimport Navigation from \"./components/Navigation\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n// SHAYDA NOTE: This is the default css file; will need to be updated:\nimport \"./App.css\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport theme from \"./Theme\";\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <Navigation />\n        <div className=\"App\">\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/projects\" exact component={Projects} />\n            <Route path=\"/profile\" exact component={Profile} />\n            <Route path=\"/dashboard\" exact component={Dashboard} />\n          </Switch>\n        </div>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Auth0Provider } from './contexts/auth0-context'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Auth0Provider>\n      <App />\n  </Auth0Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}